'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handler = exports.aliases = exports.builder = exports.desc = exports.command = undefined;

var _cliTable = require('cli-table3');

var _cliTable2 = _interopRequireDefault(_cliTable);

var _async = require('../../utils/async');

var _contentfulClients = require('../../utils/contentful-clients');

var _log = require('../../utils/log');

var _pagination = require('../../utils/pagination');

var _pagination2 = _interopRequireDefault(_pagination);

var _styles = require('../../utils/styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const command = exports.command = 'list';

const desc = exports.desc = 'List your spaces';

const builder = exports.builder = yargs => {
  return yargs.usage('Usage: contentful space list').option('management-token', {
    alias: 'mt',
    describe: 'Contentful management API token',
    type: 'string'
  }).epilog(['See more at:', 'https://github.com/contentful/contentful-cli/tree/master/docs/space/list', 'Copyright 2018 Contentful, this is a BETA release'].join('\n'));
};

const aliases = exports.aliases = ['ls'];

async function spaceList({ context }) {
  const { managementToken, activeSpaceId } = context;

  const client = await (0, _contentfulClients.createManagementClient)({
    accessToken: managementToken,
    feature: 'space-list'
  });

  const result = await (0, _pagination2.default)({ client, method: 'getSpaces' });

  const spaces = result.items.sort((a, b) => a.name.localeCompare(b.name));

  const table = new _cliTable2.default({
    head: ['Space name', 'Space id']
  });

  spaces.forEach(space => {
    if (space.sys.id === activeSpaceId) {
      table.push([(0, _styles.highlightStyle)(`${space.name} [active]`), (0, _styles.highlightStyle)(space.sys.id)]);
      return;
    }
    table.push([space.name, space.sys.id]);
  });

  (0, _log.log)(table.toString());
}

const handler = exports.handler = (0, _async.handleAsyncError)(spaceList);