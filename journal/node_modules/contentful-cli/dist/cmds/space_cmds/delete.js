'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handler = exports.builder = exports.desc = exports.command = undefined;
exports.spaceDelete = spaceDelete;

var _actions = require('../../utils/actions');

var _async = require('../../utils/async');

var _contentfulClients = require('../../utils/contentful-clients');

var _emojis = require('../../utils/emojis');

var _log = require('../../utils/log');

var _styles = require('../../utils/styles');

const command = exports.command = 'delete';
const desc = exports.desc = 'Deletes a space';

const builder = exports.builder = yargs => {
  return yargs.usage('Usage: contentful space delete').option('space-id', {
    alias: 's',
    describe: 'ID of the space to delete',
    nargs: 1
  }).option('management-token', {
    alias: 'mt',
    describe: 'Contentful management API token',
    type: 'string'
  }).option('yes', {
    describe: 'Skip the confirmation question'
  }).epilog('Copyright 2018 Contentful, this is a BETA release');
};

async function spaceDelete({ context, yes }) {
  const { managementToken, activeSpaceId } = context;
  const client = await (0, _contentfulClients.createManagementClient)({
    accessToken: managementToken
  });

  const space = await client.getSpace(activeSpaceId);

  if (!yes) {
    (0, _log.log)(`You are about to delete your ${(0, _styles.highlightStyle)(space.name)} (${(0, _styles.highlightStyle)(space.sys.id)}) space and all of its content. This cannot be undone.`);
    (0, _log.log)();

    const confirm = await (0, _actions.confirmation)('Do you want to confirm the deletion?');
    (0, _log.log)();

    if (!confirm) {
      (0, _log.log)((0, _styles.warningStyle)(`Space deletion aborted.`));
      return;
    }
  }

  (0, _log.log)();
  await space.delete();

  (0, _log.log)();
  (0, _log.success)(`${_emojis.successEmoji} Your ${(0, _styles.highlightStyle)(space.name)} (${(0, _styles.highlightStyle)(space.sys.id)}) space was successfully deleted.`);
}

const handler = exports.handler = (0, _async.handleAsyncError)(spaceDelete);