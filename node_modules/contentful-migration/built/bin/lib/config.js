"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const path = __importStar(require("path"));
const os = __importStar(require("os"));
// TODO: I'm ugly, maybe change me
const homedir = process.env.NODE_ENV === 'test' ? '/tmp' : os.homedir();
const configPath = path.resolve(homedir, '.contentfulrc.json');
function getFileConfig() {
    try {
        const config = require(configPath);
        return config.cmaToken ?
            { accessToken: config.cmaToken } :
            {};
    }
    catch (e) {
        return {};
    }
}
function getEnvConfig() {
    const envKey = 'CONTENTFUL_MANAGEMENT_ACCESS_TOKEN';
    return process.env[envKey] ?
        { accessToken: process.env[envKey] } :
        {};
}
function getArgvConfig({ spaceId, environmentId = 'master', accessToken, proxy, rawProxy }) {
    const config = {
        spaceId,
        environmentId,
        accessToken,
        proxy,
        rawProxy
    };
    if (!config.accessToken) {
        delete config.accessToken;
    }
    return config;
}
function getConfig(argv) {
    const fileConfig = getFileConfig();
    const envConfig = getEnvConfig();
    const argvConfig = getArgvConfig(argv || {});
    return Object.assign(fileConfig, envConfig, argvConfig);
}
exports.getConfig = getConfig;
exports.default = getConfig;
//# sourceMappingURL=config.js.map