'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handler = exports.builder = exports.desc = exports.command = undefined;
exports.login = login;

var _open = require('open');

var _open2 = _interopRequireDefault(_open);

var _inquirer = require('inquirer');

var _inquirer2 = _interopRequireDefault(_inquirer);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _context = require('../context');

var _actions = require('../utils/actions');

var _async = require('../utils/async');

var _log = require('../utils/log');

var _styles = require('../utils/styles');

var _text = require('../utils/text');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const APP_ID = '9f86a1d54f3d6f85c159468f5919d6e5d27716b3ed68fd01bd534e3dea2df864';
const REDIRECT_URI = 'https://www.contentful.com/developers/cli-oauth-page/';
const oAuthURL = `https://be.contentful.com/oauth/authorize?response_type=token&client_id=${APP_ID}&redirect_uri=${REDIRECT_URI}&scope=content_management_manage`;

const command = exports.command = 'login';

const desc = exports.desc = 'Login to Contentful';

const builder = exports.builder = yargs => {
  return yargs.usage('Usage: contentful login').option('management-token', {
    alias: 'mt',
    describe: 'Contentful management API token',
    type: 'string'
  }).epilog(['See more at:', 'https://github.com/contentful/contentful-cli/tree/master/docs/login', 'Copyright 2018 Contentful, this is a BETA release'].join('\n'));
};

async function login({ context, managementToken: managementTokenFlag }) {
  const { managementToken } = context;

  let token;
  if (managementTokenFlag) {
    token = managementTokenFlag;
  } else {
    if (managementToken) {
      (0, _log.log)();
      (0, _log.log)(`Looks like you already stored a management token on your system. ${_chalk2.default.dim(`(Located at ${await (0, _context.getConfigPath)()})`)}`);
      (0, _log.log)((0, _text.frame)(`Your management token: ${managementToken}`));
      (0, _log.log)(`Maybe you want to ${(0, _styles.codeStyle)('contentful logout')}?`);
      return managementToken;
    }

    (0, _log.log)(`A browser window will open where you will log in (or sign up if you donâ€™t have an account), authorize this CLI tool and paste your ${(0, _styles.highlightStyle)('CMA token')} here:`);
    (0, _log.log)();

    const confirmed = await (0, _actions.confirmation)('Open a browser window now?');

    if (!confirmed) {
      (0, _log.log)('Log in aborted by the user.');
      return;
    }

    // We open the browser window only on Windows and OSX since this might fail or open the wrong browser on Linux.
    if (['win32', 'darwin'].includes(process.platform)) {
      await (0, _open2.default)(oAuthURL, {
        wait: false
      });
    } else {
      (0, _log.log)(`Unable to open your browser automatically. Please open the following URI in your browser:\n\n${(0, _styles.pathStyle)(oAuthURL)}\n\n`);
    }

    const tokenAnswer = await _inquirer2.default.prompt([{
      type: 'input',
      name: 'managementToken',
      message: 'Paste your token here:',
      validate: val => /^[a-zA-Z0-9_-]{43,64}$/i.test(val.trim()) // token is 43 to 64 cahracters and accept lower/uppercase caharacter plus `-` and `_`
    }]);

    token = tokenAnswer.managementToken;
  }

  await (0, _context.setContext)({
    managementToken: token
  });
  await (0, _context.storeRuntimeConfig)();
  (0, _log.log)();
  (0, _log.log)(`Great! Your ${(0, _styles.highlightStyle)('CMA token')} is now stored on your system. ${_chalk2.default.dim(`(Located at ${await (0, _context.getConfigPath)()})`)}`);
  (0, _log.log)(`You can always run ${(0, _styles.codeStyle)('contentful logout')} to remove it.`);

  return token;
}

const handler = exports.handler = (0, _async.handleAsyncError)(login);