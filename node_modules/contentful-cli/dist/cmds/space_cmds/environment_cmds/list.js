'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handler = exports.aliases = exports.builder = exports.desc = exports.command = undefined;
exports.environmentList = environmentList;

var _cliTable = require('cli-table3');

var _cliTable2 = _interopRequireDefault(_cliTable);

var _async = require('../../../utils/async');

var _contentfulClients = require('../../../utils/contentful-clients');

var _log = require('../../../utils/log');

var _pagination = require('../../../utils/pagination');

var _pagination2 = _interopRequireDefault(_pagination);

var _styles = require('../../../utils/styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const command = exports.command = 'list';

const desc = exports.desc = 'List your space environments';

const builder = exports.builder = yargs => {
  return yargs.usage('Usage: contentful space environment list').option('space-id', {
    alias: 's',
    describe: 'ID of the space the environment will belong to',
    type: 'string'
  }).option('management-token', {
    alias: 'mt',
    describe: 'Contentful management API token',
    type: 'string'
  }).epilog(['See more at:', 'https://github.com/contentful/contentful-cli/tree/master/docs/space/environment/list', 'Copyright 2018 Contentful, this is a BETA release'].join('\n'));
};

const aliases = exports.aliases = ['ls'];

async function environmentList({ context }) {
  const { managementToken, activeSpaceId, activeEnvironmentId } = context;

  const client = await (0, _contentfulClients.createManagementClient)({
    accessToken: managementToken,
    feature: 'space-environment-list'
  });

  const space = await client.getSpace(activeSpaceId);

  const result = await (0, _pagination2.default)({ client: space, method: 'getEnvironments' });

  const environments = result.items.sort((a, b) => a.name.localeCompare(b.name));

  const table = new _cliTable2.default({
    head: ['Environment name', 'Environment id', 'Environment status']
  });

  environments.forEach(environment => {
    if (activeEnvironmentId === environment.sys.id) {
      table.push([(0, _styles.highlightStyle)(`${environment.name} [active]`), (0, _styles.highlightStyle)(environment.sys.id), (0, _styles.highlightStyle)(environment.sys.status.sys.id)]);
    } else {
      table.push([environment.name, environment.sys.id, environment.sys.status.sys.id]);
    }
  });

  (0, _log.log)(table.toString());
}

const handler = exports.handler = (0, _async.handleAsyncError)(environmentList);