'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _shellEscape = require('shell-escape');

var _shellEscape2 = _interopRequireDefault(_shellEscape);

var _create = require('../cmds/space_cmds/create');

var _log = require('../utils/log');

var _context = require('../context');

var _text = require('../utils/text');

var _styles = require('../utils/styles');

var _emojis = require('../utils/emojis');

var _actions = require('../utils/actions');

var _helpers = require('./helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = async function createSpaceStep(guideContext) {
  guideContext.stepCount++;

  const { stepCount, activeGuide } = guideContext;

  const createSpaceCommand = ['contentful', 'space', 'create', '--name', activeGuide.name];

  (0, _log.log)();
  (0, _log.log)((0, _text.separator)(_helpers.GUIDE_MAX_WIDTH));
  (0, _log.wrappedLog)(`${(0, _emojis.generateNumberEmoji)(stepCount)} Create a Space to hold your content`, _helpers.GUIDE_MAX_WIDTH);
  (0, _log.log)((0, _text.separator)(_helpers.GUIDE_MAX_WIDTH));
  (0, _log.log)();
  (0, _log.wrappedLog)(`${stepCount > 1 ? 'Next' : 'First'}, we’ll create a Space which is a container for all of your structured content. We’ll create and name the space '${(0, _styles.highlightStyle)(activeGuide.name)}' using the command: ${(0, _styles.codeStyle)((0, _shellEscape2.default)(createSpaceCommand))}`, _helpers.GUIDE_MAX_WIDTH);

  (0, _log.log)();
  const confirmSpaceCreate = await (0, _actions.confirmation)('Create your new Space now?');

  if (!confirmSpaceCreate) {
    throw new _helpers.AbortedError();
  }

  const context = await (0, _context.getContext)();

  const space = await (0, _create.spaceCreate)({
    name: activeGuide.name,
    feature: 'guide',
    context
  });

  guideContext.spaceId = space.sys.id;
};